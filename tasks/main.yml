---
- name: Ensure postfix is installed.
  package:
    name: postfix
    state: present

- name: warn for missing domainname
  debug: msg='Warning - domainname is not set (usually in /etc/hosts), most MTAs will refuse non-FQDN-senders...'
  when:
    - ansible_domain == ""

# FIXME Check for existing Files (register facts and check for it in template main.cf.j2):
#postfix_smtpd_tls_cert_file: "/etc/letsencrypt/live/FQDN/cert.pem"
#postfix_smtpd_tls_key_file: "/etc/letsencrypt/live/FQDN/privkey.pem"
#postfix_smtpd_tls_ca_file: "/etc/letsencrypt/live/FQDN/fullchain.pem"
#postfix_smtpd_tls_cert_file_debian: "/etc/ssl/certs/ssl-cert-snakeoil.pem"
#postfix_smtpd_tls_key_file_debian: "/etc/ssl/private/ssl-cert-snakeoil.key"

- name: Template Postfix configuration (master)
  template:
    src: etc/postfix/main.cf.j2
    dest: /etc/postfix/main.cf
    owner: root
    group: root
    mode: 0644
  notify: restart postfix
  when:
  - postfix_relay_role is defined
  - postfix_relay_role == "master"

- name: Update Postfix configuration (satellite)
  lineinfile:
    dest: "{{ postfix_main_config_file }}"
    line: "{{ item.name }} = {{ item.value }}"
    regexp: "^{{ item.name }} ="
  with_items:
    - name: inet_interfaces
      value: "{{ postfix_inet_interfaces }}"
    - name: inet_protocols
      value: "{{ postfix_inet_protocols }}"
    - name: mynetworks
      value: "{{ postfix_mynetworks | join(' ') }}"
    - name: message_size_limit
      value: "{{ postfix_message_size_limit }}"
    - name: mydestination
      value: "{{ postfix_mydestination }}"
    - name: relayhost
      value: "{{ postfix_relayhost }}"
    - name: smtpd_banner
      value: "{{ postfix_smtpd_banner }}"
    - name: smtp_tls_security_level
      value: "{{ postfix_smtp_tls_security_level }}"
    - name: smtpd_tls_security_level
      value: "{{ postfix_smtpd_tls_security_level }}"
    - name: maximal_queue_lifetime
      value: "{{ postfix_maximal_queue_lifetime }}"
    - name: bounce_queue_lifetime
      value: "{{ postfix_bounce_queue_lifetime }}"
  notify: restart postfix
  when:
  - postfix_relay_role is defined
  - postfix_relay_role == "satellite"


- name: Update Postfix configuration (satellite) smtpd_tls_received_header
  lineinfile:
    dest: "{{ postfix_main_config_file }}"
    line: "{{ item.name }} = {{ item.value }}"
    regexp: "^{{ item.name }} ="
  with_items:
    - name: smtpd_tls_received_header
      value: "yes"
  notify: restart postfix
  when:
  - postfix_smtpd_tls_received_header
  - postfix_relay_role is defined
  - postfix_relay_role == "satellite"

- name: Install sasl packages (Debian-family)
  package: name={{item}} state=present
  with_items:
    - libsasl2-2
    - sasl2-bin
    - libsasl2-modules
  when:
  - postfix_smtp_sasl_auth_enable or postfix_smtpd_sasl_auth
  - ansible_os_family == "Debian"

- name: Install sasl packages (RedHat-family)
  package: name={{item}} state=present
  with_items:
    - cyrus-sasl
    - cyrus-sasl-plain
  when:
  - postfix_smtp_sasl_auth_enable or postfix_smtpd_sasl_auth
  - ansible_os_family == "RedHat"

- name: Add the user postfix to group sasl
  user:
    name: postfix
    groups: sasl
    append: yes
  notify:
    - restart postfix
  when:
  - postfix_smtpd_sasl_auth

- name: Configure sasl file for postfix
  template:
    src: etc/default/saslauthd-postfix.j2
    dest: "{{ postfix_smtpd_sasl_auth_default_file }}"
    owner: root
    group: root
    mode: 0600
  no_log: true
  notify:
    - restart saslauthd
  when:
  - postfix_smtpd_sasl_auth

- name: Configure sasl default file
  template:
    src: etc/postfix/sasl/smtpd.conf.j2
    dest: "{{ postfix_smtpd_sasl_auth_conf_file }}"
    owner: root
    group: root
    mode: 0600
  no_log: true
  notify:
    - restart postfix
  when:
  - postfix_smtpd_sasl_auth

- name: Add sasl user
  shell: echo "{{ postfix_sasl_password }}" | saslpasswd2 -p -c -u "{{ ansible_fqdn | default('localhost') }}" "{{ postfix_sasl_user }}"
  # no_log: true
  when:
  - postfix_smtpd_sasl_auth

- name: Configure sasl client username/password
  template:
    src: etc/postfix/sasl_passwd.j2
    dest: "{{ postfix_smtp_sasl_password_maps_file }}"
    owner: root
    group: root
    mode: 0600
  no_log: true
  notify:
    - postmap postfix_smtp_sasl_password_maps
    - restart postfix
  when:
  - postfix_smtp_sasl_password_maps is defined
  - postfix_smtp_sasl_auth_enable

- name: Update Postfix config with sasl options
  lineinfile:
    dest: "{{ postfix_main_config_file }}"
    line: "{{ item.name }} = {{ item.value }}"
    regexp: "^{{ item.name }} ="
  with_items:
    - name: smtp_sasl_auth_enable
      value: "yes"
    - name: smtp_sasl_password_maps
      value: "{{ postfix_smtp_sasl_password_maps }}"
    - name: smtp_sasl_security_options
      value: "{{ postfix_smtp_sasl_security_options }}"
  notify:
    - restart postfix
  when:
  - postfix_smtp_sasl_auth_enable
  - postfix_relay_role is defined
  - postfix_relay_role == "satellite"

- name: Not using chroot for Postfix
  template:
    src: etc/postfix/master.cf.j2
    dest: "{{ postfix_master_config_file }}"
    owner: root
    group: root
    mode: 0644
  notify:
    - restart postfix
  when:
  - postfix_master_config_file is defined
  - postfix_relay_role == "master"

- name: Configure relaydomains
  template:
    src: etc/postfix/relay_domains.j2
    dest: "{{ postfix_relaydomains_file }}"
    owner: root
    group: root
    mode: 0600
  notify:
    - postmap postfix_relaydomains_file
    - restart postfix
  when:
  - postfix_relaydomains_file is defined
  - postfix_relay_role == "master"

- name: Create myorigin-file (Debian-family)
  template:
    src: etc/mailname.j2
    dest: "{{ postfix_myorigin_file_debian }}"
    owner: root
    group: root
    mode: 0644
  notify: restart postfix
  when:
  - postfix_myorigin is defined
  - postfix_myorigin != ''
  - postfix_myorigin != none
  - ansible_os_family == "Debian"

- name: Set myorigin in Postfix Config (not on Debian-family)
  lineinfile:
    dest: "{{ postfix_main_config_file }}"
    line: "{{ item.name }} = {{ item.value }}"
    regexp: "^{{ item.name }} ="
  with_items:
    - name: myorigin
      value: "{{ postfix_myorigin }}"
  notify: restart postfix
  when:
  - postfix_myorigin is defined
  - postfix_myorigin != ''
  - postfix_myorigin != none
  - ansible_os_family != "Debian"

- name: Ensure postfix is started and enabled at boot.
  service:
    name: postfix
    state: "{{ postfix_service_state }}"
    enabled: "{{ postfix_service_enabled }}"

- name: Force handlers to run before testing'
  meta: flush_handlers

- name: Send a success email
  mail:
   host: "{{ postfix_send_test_mail_host }}"
   port: "{{ postfix_send_test_mail_port }}"
   from: "{{ postfix_send_test_mail_from }}"
   to: "{{ postfix_send_test_mail_to }}"
   subject: "{{ postfix_send_test_mail_subject }} {{ ansible_fqdn }}"
   body: "{{ postfix_send_test_mail_body }}"
  when:
    - postfix_send_test_mail == true
