---
- name: Ensure postfix is installed.
  package:
    name: postfix
    state: present

- name: Update Postfix configuration.
  lineinfile:
    dest: "{{ postfix_config_file }}"
    line: "{{ item.name }} = {{ item.value }}"
    regexp: "^{{ item.name }} ="
  with_items:
    - name: inet_interfaces
      value: "{{ postfix_inet_interfaces }}"
    - name: inet_protocols
      value: "{{ postfix_inet_protocols }}"
    - name: mynetworks
      value: "{{ postfix_mynetworks | join(' ') }}"
    - name: message_size_limit
      value: "{{ postfix_message_size_limit }}"
    - name: mydestination
      value: "{{ postfix_mydestination }}"
    - name: relayhost
      value: "{{ postfix_relayhost }}"
    - name: smtpd_banner
      value: "{{ postfix_smtpd_banner }}"
    - name: smtp_tls_security_level
      value: "{{ postfix_smtp_tls_security_level }}"
    - name: smtpd_tls_security_level
      value: "{{ postfix_smtpd_tls_security_level }}"
    - name: smtpd_tls_received_header
      value: "{{ postfix_smtpd_tls_received_header }}"
    - name: maximal_queue_lifetime
      value: "{{ postfix_maximal_queue_lifetime }}"
    - name: bounce_queue_lifetime
      value: "{{ postfix_bounce_queue_lifetime }}"
  notify: restart postfix

- name: Install sasl packages (Debian-family)
  when: (postfix_smtp_sasl_auth_enable == "yes") and ansible_os_family == "Debian"
  package: name={{item}} state=present
  with_items:
    - libsasl2-2
    - sasl2-bin
    - libsasl2-modules

- name: Install sasl packages (RedHat-family)
  when: (postfix_smtp_sasl_auth_enable == "yes") and ansible_os_family == "RedHat"
  package: name={{item}} state=present
  with_items:
    - cyrus-sasl
    - cyrus-sasl-plain

- name: Configure sasl username/password
  template:
    src: etc/postfix/sasl_passwd.j2
    dest: /etc/postfix/sasl_passwd
    owner: root
    group: root
    mode: 0600
  when: postfix_smtp_sasl_auth_enable == "yes"
  no_log: true
  notify:
    - postmap sasl_passwd
    - restart postfix

- name: Update Postfix config with sasl options
  lineinfile:
    dest: "{{ postfix_config_file }}"
    line: "{{ item.name }} = {{ item.value }}"
    regexp: "^{{ item.name }} ="
  with_items:
    - name: smtp_sasl_auth_enable
      value: "{{ postfix_smtp_sasl_auth_enable }}"
    - name: smtp_sasl_password_maps
      value: "{{ postfix_smtp_sasl_password_maps }}"
    - name: smtp_sasl_security_options
      value: "{{ postfix_smtp_sasl_security_options }}"
  when: postfix_smtp_sasl_auth_enable == "yes"
  notify:
    - restart postfix

- name: Create myorigin-file (Debian-family)
  template:
    src: etc/mailname.j2
    dest: /etc/mailname
    owner: root
    group: root
    mode: 0644
  when: postfix_myorigin is defined and postfix_myorigin != '' and postfix_myorigin != none and ansible_os_family == "Debian"
  notify: restart postfix

- name: Set myorigin in Postfix Config
  lineinfile:
    dest: "{{ postfix_config_file }}"
    line: "{{ item.name }} = {{ item.value }}"
    regexp: "^{{ item.name }} ="
  with_items:
    - name: myorigin
      value: "{{ postfix_myorigin }}"
  when: postfix_myorigin is defined and postfix_myorigin != '' and postfix_myorigin != none
  notify: restart postfix

- name: Ensure postfix is started and enabled at boot.
  service:
    name: postfix
    state: "{{ postfix_service_state }}"
    enabled: "{{ postfix_service_enabled }}"

- name: warn for missing domainname
  debug: msg='Warning - domainname is not set (usually in /etc/hosts), most MTAs will refuse non-FQDN-senders...'
  when:
    - ansible_domain == ""

- name: Send a success email
  mail:
   host: "{{ postfix_send_test_mail_host }}"
   port: "{{ postfix_send_test_mail_port }}"
   to: "{{ postfix_send_test_mail_to }}"
   subject: "{{ postfix_send_test_mail_subject }} {{ ansible_fqdn }}"
   body: "{{ postfix_send_test_mail_body }}"
  when:
    - postfix_send_test_mail == true
